class Solution:
    def checkSubarraySum(self, nums, k):
        lenNums = len(nums)
        if lenNums < 2:
            return False
        dp =[[0]*lenNums] *lenNums
        for i in range(0, lenNums):
            dp[i][i] =nums[i]
        for i in range(1, lenNums):
            for j in range(i-1, -1, -1):
                dp[i][j] = dp[i][j+1] + nums[j]
                if abs(i-j) >= 1:
                    if dp[i][j] == 0:
                        return True
                    if k == 0 :
                        return False
                    if  dp[i][j] % k == 0:
                        return True
        return False


S = Solution()
inNums = [96,521,250,296,243,67,347,197,505,16,377,330,361,10,35,373,329,304,67,231,322,125,218,155,59,396,322,85,58,352,249,182,277,494,261,374,4,208,381,503,97,216,258,85,114,15,156,437,362,382,191,371,205,278,59,69,367,350,211,188,34,303,113,422,94,453,300,43,34,434,164,480,7,33,311,2,95,259,298,42,388,87,42,264,377,303,304,93,98,65,453,135,497,424,292,504,151,112,294,156,32,201,285,429,507,489,96,467,241,403,166,200,357,99,516,161,502,199,103,66,251,357,20,86,369,420,382,374,163,13,477,4,82,20,309,287,336,5,102,379,250,134,338,79,136,192,300,28,268,265,379,373,149,257,289,130,74,176,123,354,441,303,383,25,281,322,295,492,499,519,392,353,136,433,406,486,95,195,14,290,17,439,363,91,223,228,171,308,397,457,214,155,339,425,79,409,43,141,460,280,362,236,371,6,160,300,368,1,92,495,15,319,515,487,515,428,157,172,482,73,69,462,509,204,66,119,75,393,48,398,231,455,85,462,324,275,427,446,121,375,77,407,441,27,133,367,231,269,369,191,67,109,356,345,268,173,190,293,174,371,422,382,106,206,404,365,90,49,142,304,104,68,128,479,146,114,333,4,171,303,171,194,476,231,161,244,448,466,339,78,120,369,44,26,440,521,204,147,126,160,79,397,102,526,88,112,485,245,304,10,500,244,375,52,509,275,175,358,471,362,197,409,460,88,448,207,231,175,225,364,239,32,69,127,66,475,351,280,315,360,395,498,225,56,187,345,316,182,322,406,33,93,69,388,289,257,331,43,205,142,70,492,197,504,185,388,200,312,214,389,344,88,127,194,294,465,275,197,192,147,348,149,444,201,498,361,218,273,240,36,14,396,462,271,228,191,201,315,302,223,318,45,313,46,97,458,120,309,42,167,111,416,393,379,318,377,380,430,341,494,363,267,420,222,364,496,523,181,278,364,123,82,311,430,161,32,346,122,12,409,79,411,88,209,440,5,519,108,414,263,295,370,471,179,157,303,61,153,409,510,410,254,354,487,296,186,442,515,316,328,174,307,323,408,213,30,250,501,514,241,420,252,320,199,73,513,307,156,398,210,351,496,353,251,315,154,44,319,64,514,138,38,417,24,190,418,514,286,286,467,456,393,113,347,393,176,314,389,306,114,129,407,123,42,241,254,426,161,394,377,174,344,107,221,341,170,287,42,141,71,113,4,475,98,305,235,500,416,93,490,55,470,294,386,340,393,229,169,7,252,274,196,203,211,510,520,55,320,275,292,405,506,165,100,226,57,254,53,285,124,341,501,307,173,522,380,30,54,114,233,108,409,100,66,298,29,266,470,334,110,29,270,19,379,81,54,355,41,249,202,298,388,502,280,123,359,369,99,299,158,495,111,289,72,345,523,448,382,143,320,215,90,236,282,276,57,359,117,291,298,428,275,374,524,296,222,338,280,395,334,460,442,45,335,321,287,85,28,318,174,18,105,152,169,430,111,342,514,396,454,453,151,176,383,182,284,76,78,51,79,105,345,232,227,401,167,77,282,53,273,348,191,498,407,272,82,341,340,257,366,359,147,244,121,219,346,413,147,241,129,20,404,276,286,385,6,258,440,89,175,318,375,1,493,221,470,475,162,248,53,378,334,35,510,78,389,519,146,23,302,486,512,485,485,222,205,157,502,272,55,241,488,94,267,288,519,213,11,432,108,399,497,188,24,411,159,141,379,526,238,355,391,129,166,174,164,405,264,392,272,85,39,408,359,376,161,211,261,190,474,379,95,384,251,148,162,252,465,153,93,1,196,435,276,144,526,427,170,110,317,481,508,268,69,221,441,192,50,245,407,388,367,311,182,297,495,345,102,467,183,249,239,328,263,368,512,252,231,358,11,134,45,483,95,441,322,362,511,373,475,162,414,216,57,197,181,123,176,214,356,418,243,60,111,224,432,464,314,287,135,338,83,496,425,452,132,465,58,251,227,54,54,481,446,449,352,334,50,314,365,435,295,45,163,497,260,379,400,153,24,350,309,397,136,212,362,408,339,505,106,397,67,296,23,488,478,217,444,373,405,98,267,77,126,329,127,64,11,157,350,57,50,394,481,174,120,394,133,349,519,15,26,173,264,496,85,70,315,260,447,510,393,161,444,60,306,104,308,477,140,99,32,86,406,382,522,7,176,21,51,474,85,390,469,348,486,441,407,59,379,3,338,397,363,487,413,17,370,318,176,495,61,381,478,507,295,156,169,440,483]
ret = S.checkSubarraySum(inNums, -615201247)
print(ret)